/* colors */
:root {
  --primary: #bada55;
  --bgcolor: #eee;
}

*,
*::before,
*::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: sans-serif;
}

@mixin flexCenter($direction) {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: $direction;
}

body {
  padding: 0 1em;
  background-color: var(--bgcolor);
  min-height: 100vh;
  display: grid;
  grid-template-rows: auto auto 1fr auto;
  justify-content: center;
}

@media screen and (min-width: 600px) {
  body {
    grid-template-columns: minmax(500px, 700px);
    margin: 0 2em;
  }
}

header {
  // @include flexCenter(row);
  margin-top: 2em;
}

main {
  margin-top: 3em;
}

form {
  @include flexCenter(row)
}

ul {
  list-style: none;
  margin-top: 1em;
}

button, input[type=checkbox] {
  cursor: pointer;
}

h3 {
  margin-top: 1em;
}


.newTaskForm {
  
  .newTaskForm__input {
    padding: .5em 1em;
    font-size: 1em;
    margin-right: .5em;
    background: none;
    border: none;
    border-bottom: 4px solid #bada55;
    transition: all .2s;

    &:focus {
      border-bottom-color: #f28f04;
    }
  }

  .newTaskForm__addBtn {
    border: none;
    height: 1.5em;
    width: 1.5em;
    background: none;
    font-size: 1.5em;
    padding: .5em;
    transition: all .1s ease-in-out;
  
    &:hover, &:focus {
      transform: scale(1.2);
    }
    
    svg {
      transform: translate(-25%, -25%);
    }
  }
}

.done {
  text-decoration: line-through;
  color: #666666;
}

.todos-list {
  overflow: hidden;
}


.item {
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  padding: 1em .5em;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: all .1s;

  &:hover {
    background-color: #e6e6e6;
  }

  button {
    border: none;
    background: none;
    font-size: 1.5em;
    transition: all .2s;

    &:hover {
      transform: scale(1.2);
    }
  }

  span {
    flex: 1;
    text-align: center;
  }

  .item__editTaskForm {
    flex: 1;
    display: flex;
    justify-content: space-between;
  
    .item__editTaskForm__editInput {
      margin: 0 auto;
      text-align: center;
      background: none;
      border: none;

      &:focus {
        text-decoration-color: #bada55;
        text-decoration: wavy;
      }
    }

    .saveBtn {
      margin-right: .5em;
    }
  
  }

}

.item__checkbox__container {
  display: block;
  cursor: pointer;
  position: relative;

  .item__checkbox {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  .item__checkmark {
    position: absolute;
    top: 0;
    left: 0;
    transform: translateY(-50%);
    height: 1.6em;
    width: 1.6em;
    border: 2px solid #666;
    border-bottom-width: 2px;
    border-right-width: 2px;
    border-bottom-color: #999;
    border-right-color: #999;
    background-color: #eee;

  }

  .item__checkmark:after {
    content: "";
    position: absolute;
    opacity: 0;
    transform: scale(1.5);
  }
}

.item__checkbox:checked ~ .item__checkmark {
  border: none;
}

.item__checkbox:checked ~ .item__checkmark:after {
  content: '\1F37F';
  transform: rotate(15deg) scale(.8, 1) translate(-60%, -25%);
  transition: transform .1s;
  opacity: 1;
  font-size: 2.5em;

  &:hover {
    transform: rotate(15deg) scale(1.1) translate(-50%, -25%);
  }
}

.item__removeBtn {
  margin-left: 1em;
  color: hsl(0, 50%, 30%);
  transition: color .2s;

  &:hover {
    color: hsl(0, 100%, 50%);
  }
}

.item__editTaskForm__saveBtn {
  margin-right: 1em;
  color: hsl(155, 50%, 30%);
  transition: color .2s;

  &:hover {
    color: hsl(155, 90%, 33%);
  }
}


.listModifiers {
  margin-top: 2em;
  
  .svg-inline--fa {
    margin-right: .5em;
  }

  button {
    border:none;
    background: none;
    border-radius: 5px;
    font-size: 1.1em;
  }
}

.orderItems {
  
  button {
    color: hsl(239, 50%, 40%);
    transition: color .2s;
    
    &:hover {
      color: hsl(239, 100%, 50%);
    }

    &:hover svg {
      transform: scale(1.2);
    }

    svg {
      transition: transform .1s;
    }
  }
  
  
}

.moreActions {
  margin-top: 1em;  
  
  button {
    color: hsl(0, 50%, 30%);
    transition: color .2s;

    &:hover {
      color: hsl(0, 100%, 50%);
    }

    &:hover svg {
      transform: scale(1.2);
    }


    svg {
      transition: transform .1s;
    }
  }
}

.moreActions__deleteAllBtn {
  margin-left: 1em;
}


@media screen and (min-width: 600px) {
  .listModifiers {
    display: flex;
    justify-content: space-between;
  }
  .moreActions {
    margin-top: 0;  
  }  
}

.tasksStatus {
  margin-top:2em;
  text-align: center;
}

footer {
  // margin-top: 25vh;
  filter: drop-shadow(0 0 5px rgba(255,255,255,1));
  display: grid;
  grid-template-areas: "card";
  
  p {
    grid-area: card;
    @include flexCenter(row);
    filter: drop-shadow(0 0 15px rgba(255,255,255,1));
    backface-visibility: hidden;
    transition: transform .4s ease-in;

    img {
      margin-left: .25em;
      width: 100px;
    }
    a {
      margin-left: .25em;
      text-decoration: none;
      color: #666;
      font-weight: 600;
    }
  }

  &:hover .front {
    transform: rotateY(.5turn);
  }
  
  .back {
    transform: rotateY(.5turn);
  }
  
  &:hover .back {
    transform: rotateY(0turn);
  }
}



/* Animations */

/* The starting CSS styles for the enter animation */
.item.ng-enter {
  transition: 0.2s linear all;
  opacity: 0;
  transform: translateY(-50px);
}

/* The finishing CSS styles for the enter animation */
.item.ng-enter.ng-enter-active {
  opacity: 1;
  transform: translateY(0);
}

.item.ng-leave {
  transition: 0.2s linear all;
  opacity: 1;
  transform: translateX(0);
}

.item.ng-leave.ng-leave-active {
  opacity: 0;
  transform: translateX(100%);
}

.item.ng-leave-stagger {
  transition-delay: 0.2s;
  transition-duration: 0s;
}